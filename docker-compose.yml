version: "3"
services:
  db_recipes:
    restart: always
    image: postgres:15-alpine
    volumes:
      - ${DATA_PATH}/postgresql:/var/lib/postgresql/data
    environment:
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB

  web_recipes:
    restart: always
    image: vabene1111/recipes
    volumes:
      - staticfiles:/opt/recipes/staticfiles
      # Do not make this a bind mount, see https://docs.tandoor.dev/install/docker/#volumes-vs-bind-mounts
      - nginx_config:/opt/recipes/nginx/conf.d
      - ${MEDIA_PATH}:/opt/recipes/mediafiles
    depends_on:
      - db_recipes
    environment:
      - DEBUG
      - SQL_DEBUG
      - DEBUG_TOOLBAR
      - ALLOWED_HOSTS
      - SECRET_KEY
      - TIMEZONE
      - DB_ENGINE
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - FRACTION_PREF_DEFAULT
      - COMMENT_PREF_DEFAULT
      - SHOPPING_MIN_AUTOSYNC_INTERVAL
      - GUNICORN_MEDIA
      - REVERSE_PROXY_AUTH

  nginx_recipes:
    image: nginx:mainline-alpine
    restart: always
    ports:
      - ${PORT}:80
    depends_on:
      - web_recipes
    volumes:
      # Do not make this a bind mount, see https://docs.tandoor.dev/install/docker/#volumes-vs-bind-mounts
      - nginx_config:/etc/nginx/conf.d:ro
      - staticfiles:/static:ro
      - ${MEDIA_PATH}:/media:ro
    environment:
      - DEBUG
      - SQL_DEBUG
      - DEBUG_TOOLBAR
      - ALLOWED_HOSTS
      - SECRET_KEY
      - TIMEZONE
      - DB_ENGINE
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - FRACTION_PREF_DEFAULT
      - COMMENT_PREF_DEFAULT
      - SHOPPING_MIN_AUTOSYNC_INTERVAL
      - GUNICORN_MEDIA
      - REVERSE_PROXY_AUTH

volumes:
  nginx_config:
  staticfiles:
